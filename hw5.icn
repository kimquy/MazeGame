# Long Nguyen
# CS210 programming language
# Homework 5
# Fall 2011

link graphics

# countRow() count number of rows
procedure countRow(file)
	count:=0
	seek(file,1) #move to begining of the file
	while line:=read(file) do
		if line=="" then{
			break
		}
		else{
			count:=count+1
		}
	return count
end

# countCol() count number of columns
procedure countCol(file)
	seek(file,1)	#move to begining of the file
	while	line:=read(file) do
		if line=="" then{
			next
		}
		else{
			count:=(*line)
			return count
		}
end

# store input file into 2 dimensional array
procedure initGame(file,row,col)
	seek(file,1)
	gameMap:=[]
	count := 1
	while count <= row do{
		line:=read(file)
		L := []
		index := 1
		while index <= col do{
			L:= L ||| [line[index]]
			index := index +1
		}
		count := count + 1
		gameMap := gameMap ||| [L]
	}
	return gameMap
end

# print maze to graphics screen
procedure printMap(file,row,col)

	y:=100

	m := initGame(file,row,col)

	count:=1
	while count <= row do{
		index := 1
		x:=100
		while index <= col do {
			
			if m[count][index] == "#" then{
				ReadImage("brick.gif",x,y)
				WDelay(10)
				x := x + 30
				index := index + 1
			}

			if m[count][index] == "M" then{
				ReadImage("monster1.gif",x,y)
				x := x + 30
				index := index + 1
			}

			if m[count][index] == "@" then{
				ReadImage("you1.gif",x,y)
				x := x + 30
				index := index + 1
			}

			if m[count][index] == "." then{
				x := x + 30
				index := index + 1
			}					
		}
		count := count + 1
		y:=y+30
	}

end

# instruction of the game
procedure intro(row,col)
	ReadImage("brick1.gif",5,5)
	GotoRC(1,4)
	Fg("black")
	WWrite(": wall")

	ReadImage("monster5.gif",5,30)
	GotoRC(3,4)
	WWrite(": Monster")

	ReadImage("you5.gif",5,50)
	GotoRC(4,4)
	WWrite(": You")

	Font("sans,16")
	GotoRC(1,30)
	WWrite("Your location: ")

	GotoRC(2,30)
	WWrite("Monster location: ")
	Font("sans,16")
	GotoRC(3,30)
	WWrite("Maze size: ",row,"x",col)

end

# find escape location
procedure getEscapeLocation(m,row,col)
	escape:=[]
	count := 1
	while count <= col do{
		if m[1][count] == "." then{	push(escape,[1,count])	}
		count := count+1
	}

	count := 1
	while count <= col do{
		if m[row][count] == "." then{push(escape,[row,count])	}
		count := count+1
	}

	count := 1
	while count <= row do{
		if m[count][1] == "." then{push(escape,[count,1])	}
		count := count+1
	}

	count := 1
	while count <= row do{
		if m[count][col] == "." then{push(escape,[count,col])	}
		count := count+1
	}
	return escape
end

# find monster
procedure getMonster(m,row,col)
	count:=1
	while count <= row do{
		index:=1
		while index <= col do{
			if m[count][index] == "M" then{
				GotoRC(2,30)
				Fg("black")
				WWrite("Monster location: ","(",count,", ",index,")")
				position := [count,index]
				return position
			}
			index := index + 1
		}
		count := count +1
	}
end

# find you
procedure getYou(m,row,col)
	count:=1
	while count <= row do{
		index:=1
		while index <= col do{
			if m[count][index] == "@" then{
				GotoRC(1,30)
				Fg("black")
				WWrite("Your location: ","(",count,",",index,")")
				position:= [count,index]
				return position
			}
			index := index + 1
		}
		count := count +1
	}
end

# when either you or monster step on each other
procedure Death(m,row,col)
	yourPos:=getYou(m,row,col)
	n:=yourPos[1]
	n1:=yourPos[2]
	x:=100+(n1-1)*30
	y:=100+(n-1)*30
	count:=1
	while count <=2 do{
		Fg("back")
		FillRectangle(x,y,30,30)
		WDelay(200)
		Fg("yellow")
		FillRectangle(x,y,30,30)
		WDelay(200)
		Fg("red")
		FillRectangle(x,y,30,30)
		WDelay(200)
		Fg("blue")
		FillRectangle(x,y,30,30)
		WDelay(200)
		count:=count+1
	}
	Notice("You die")
	exit()
end

procedure moveDown(m,object,row,col)
	
	if object == "monster" then{
		position := getMonster(m,row,col)
		n := position[1]
		n1:=position[2]
		if n = row then { return }
		if  m[n+1][n1] == "#" then{ return }
		if m[n+1][n1] == "@" then { Death(m,row,col) }
		if m[n+1][n1] == "*" then {
			m[position[1],position[2]] := "*"
			m[position[1]+1,position[2]] := "M"
		}
		m[position[1],position[2]] := "."
		m[position[1]+1,position[2]] := "M"
	}

	if object =="you" then{
		position := getYou(m,row,col)
		n := position[1]
		n1:=position[2]
		if m[n+1][n1] == "#" then { return }
		if m[n+1][n1] == "M" then { Death(m,row,col) }
		if m[n+1][n1] == "*" then {return}
		m[position[1],position[2]] := "."
		m[position[1]+1,position[2]] := "@"
	}

	x:=100+(n1-1)*30
	y := 100 + (n-1)*30
	y1 := y
	dy := y + 30
	while y <= dy  do{
		if y > y1 then {
			Fg("white")
			FillRectangle(x,y-1,30,30)
		}
		if object == "monster" then{
			ReadImage("monster1.gif",x,y)
		}
		if object =="you" then{
			ReadImage("you1.gif",x,y)
		}

		y:=y+1
		WDelay(5)
	}
	Fg("black")
	position := getYou(m,row,col)
	position := getMonster(m,row,col)
end

procedure moveUp(m,object,row,col)

	if object == "you" then{
		position := getYou(m,row,col)
		n := position[1]
		n1:= position[2]
		if m[n-1][n1] == "#" then {return}
		if m[n-1][n1] == "M" then {Death(m,row,col)}
		if m[n-1][n1] == "*" then {return}
		m[position[1],position[2]] := "."
		m[position[1]-1,position[2]] := "@"
	}
	
	if object == "monster" then{
		position := getMonster(m,row,col)
		n := position[1]
		n1:= position[2]
		if n = 1 then { return }
		if m[n-1][n1] == "#" then {return }
		if m[n-1][n1] == "@" then {Death(m,row,col)}
		if m[n-1][n1] == "*" then {
			m[position[1],position[2]] := "*"
			m[position[1]-1,position[2]] := "M"
		}
		m[position[1],position[2]] := "."
		m[position[1]-1,position[2]] := "M"
	}

	x:= 100 + (n1-1)*30
	y := 100 + (n-1)*30
	y1 := y
	dy := y - 30
	while y  >= dy  do{
		if y < y1 then {
			Fg("white")
			FillRectangle(x,y+1,30,30)
		}
		if object == "monster" then{
			ReadImage("monster2.gif",x,y)
		}
		if object =="you"  then{
			ReadImage("you2.gif",x,y)
		}
	
		y:=y-1
		WDelay(5)
	}
	Fg("black")
	position := getYou(m,row,col)
	position := getMonster(m,row,col)
end

procedure moveRight(m,object,row,col)
	
	if object == "you" then{
		position := getYou(m,row,col)
		n := position[1]
		n1:= position[2]
		if m[n][n1+1] == "#" then {return }
		if m[n][n1+1] == "M" then {Death(m,row,col)}
		if m[n][n1+1] == "*" then {return}
		m[position[1],position[2]] := "."
		m[position[1],position[2]+1] := "@"
	}
	
	if object == "monster" then{
		position := getMonster(m,row,col)
		n := position[1]
		n1:= position[2]
		if n1 = col then { return }
		if m[n][n1+1] == "#" then {return }
		if m[n][n1+1] == "@" then {Death(m,row,col)}
		if m[n][n1+1] == "*" then {
			m[position[1],position[2]] := "*"
			m[position[1],position[2]+1] := "M"
		}
		m[position[1],position[2]] := "."
		m[position[1],position[2]+1] := "M"
	}

	x:= 100 + (n1-1)*30
	y:= 100 + (n-1)*30
	dx:= x+20
	x1:=x
	while x <= dx  do{
		if x > x1  then {
			Fg("white")
			FillRectangle(x-1,y,30,30)
		}
		if object == "monster" then{
			ReadImage("monster4.gif",x,y)
		}
		if object =="you" then{
			ReadImage("you4.gif",x,y)
		}

		x:=x+1
		WDelay(5)
	}
	Fg("black")	
	position := getYou(m,row,col)
	position := getMonster(m,row,col)
end

procedure moveLeft(m,object,row,col)
	
	if object == "you" then{
		position := getYou(m,row,col)
		n := position[1]
		n1:= position[2]
		if m[n][n1-1] == "#" then {return }
		if m[n][n1-1] == "M" then {Death(m,row,col)}
		if m[n][n1-1] == "*" then {return}
		m[position[1],position[2]] := "."
		m[position[1],position[2]-1] := "@"
	}
	
	if object == "monster" then{
		position := getMonster(m,row,col)
		n := position[1]
		n1:= position[2]
		if n1 = 1 then { return }
		if m[n][n1-1] == "#" then {return }
		if m[n][n1-1] == "@" then {Death(m,row,col)}
		if m[n][n1-1] == "*" then {
			m[position[1],position[2]] := "*"
			m[position[1],position[2]-1] := "M"
		}
		m[position[1],position[2]] := "."
		m[position[1],position[2]-1] := "M"
	}

	x:= 100 + (n1-1)*30
	y:= 100 + (n-1)*30
	dx:= x-30
	x1:=x
	while x >= dx  do{
		if x < x1  then {
			Fg("white")
			FillRectangle(x+1,y,30,30)
		}
		if object == "monster" then{
			ReadImage("monster3.gif",x,y)
		}
		if object =="you" then{
			ReadImage("you3.gif",x,y)
		}
		x:=x-1
		WDelay(5)
	}
	Fg("black")	
	position := getYou(m,row,col)
	position := getMonster(m,row,col)
end

# when you at escape location
procedure checkFinish(m,row,col,escapePos,nOfEscape)
	yourPos := getYou(m,row,col)
	count:=1
	while count <= nOfEscape do {
		if ((yourPos[1]== escapePos[count][1] ) & (yourPos[2] == escapePos[count][2])) then{
			Notice("Congratulation. \n You Escaped! \n Click Ok to exit the game")
			exit()
		}
		count := count+1
	}
end

# monster move random
procedure monsterRandomMove(m,row,col)
	a:=4
	case a1:=?a of{
		a1=1: moveUp(m,"monster",row,col)
		a1=2: moveDown(m,"monster",row,col)
		a1=3: moveLeft(m,"monster",row,col)
		a1=4: moveRight(m,"monster",row,col)
	}
end

procedure fillWent(m,L)
	n:=L[1]
	n1:=L[2]
	m[n][n1] := "*"
end

# check if the upward direction is a "."
procedure checkUp(m,row,col)
	position := getYou(m,row,col)
	n := position[1]
	n1:= position[2]
	if m[n-1][n1] == "." then { return 1} else { return 0 }
end

# check if the downward direction is a "."
procedure checkDown(m,row,col)
	position := getYou(m,row,col)
	n := position[1]
	n1:= position[2]
	if m[n+1][n1] == "." then { return 1} else { return 0 }
end

# check if the left spot is a "."
procedure checkLeft(m,row,col)
	position := getYou(m,row,col)
	n := position[1]
	n1:= position[2]
	if m[n][n1-1] == "." then { return 1} else { return 0 }
end

# check if the right spot direction is a "."
procedure checkRight(m,row,col)
	position := getYou(m,row,col)
	n := position[1]
	n1:= position[2]
	if m[n][n1+1] == "." then { return 1} else { return 0 }
end

#check if you surrounded by a fence, a face can be all the "#" or "*" surround you
procedure checkFence(m,row,col)
	position := getYou(m,row,col)
	n := position[1]
	n1:= position[2]
	if ((m[n+1][n1] == "#") & (m[n-1][n1]=="*") & (m[n][n1-1]=="*") & (m[n][n1+1]=="*")) then { return 1 }
	if ((m[n+1][n1] == "*") & (m[n-1][n1]=="#") & (m[n][n1-1]=="*") & (m[n][n1+1]=="*")) then { return 1 }
	if ((m[n+1][n1] == "*") & (m[n-1][n1]=="*") & (m[n][n1-1]=="#") & (m[n][n1+1]=="*")) then { return 1 }
	if ((m[n+1][n1] == "*") & (m[n-1][n1]=="*") & (m[n][n1-1]=="*") & (m[n][n1+1]=="#")) then { return 1 }
	if ((m[n+1][n1] == "*") & (m[n-1][n1]=="*") & (m[n][n1-1]=="*") & (m[n][n1+1]=="*")) then { return 1 }
	if ((m[n+1][n1] == "#") & (m[n-1][n1]=="*") & (m[n][n1-1]=="#") & (m[n][n1+1]=="*")) then { return 1 }
	if ((m[n+1][n1] == "#") & (m[n-1][n1]=="*") & (m[n][n1-1]=="*") & (m[n][n1+1]=="#")) then { return 1 }
	if ((m[n+1][n1] == "#") & (m[n-1][n1]=="#") & (m[n][n1-1]=="*") & (m[n][n1+1]=="*")) then { return 1 }
	if ((m[n+1][n1] == "*") & (m[n-1][n1]=="#") & (m[n][n1-1]=="#") & (m[n][n1+1]=="*")) then { return 1 }
	if ((m[n+1][n1] == "*") & (m[n-1][n1]=="#") & (m[n][n1-1]=="*") & (m[n][n1+1]=="#")) then { return 1 }
	if ((m[n+1][n1] == "#") & (m[n-1][n1]=="#") & (m[n][n1-1]=="#") & (m[n][n1+1]=="*")) then { return 1 }
	if ((m[n+1][n1] == "#") & (m[n-1][n1]=="#") & (m[n][n1-1]=="*") & (m[n][n1+1]=="#")) then { return 1 }
	if ((m[n+1][n1] == "*") & (m[n-1][n1]=="#") & (m[n][n1-1]=="#") & (m[n][n1+1]=="#")) then { return 1 }
	if ((m[n+1][n1] == "#") & (m[n-1][n1]=="*") & (m[n][n1-1]=="#") & (m[n][n1+1]=="#")) then { return 1 }
	if ((m[n+1][n1] == "*") & (m[n-1][n1]=="*") & (m[n][n1-1]=="#") & (m[n][n1+1]=="#")) then { return 1 }
	return 0
end

procedure backtrack(M,stack,row,col)
	if *stack = 0 then { Notice("You die") 
						exit() }
	
	m := stack[1][1]
	m1 := stack[1][2]
	position := getYou(M,row,col)
	n := position[1]
	n1 := position[2]
	
	M[n][n1] := "*"
	M[m][m1] := "@"
	x:= 100 + (n1-1)*30
	y := 100 + (n-1)*30
	x1 := 100 + (m1-1)*30
	y1 := 100 + (m-1)*30
	Fg("white")
	FillRectangle(x,y,30,30)
	ReadImage("you1.gif",x1,y1)

	Fg("black")
	pop(stack)
end

# check there are two or more way to go from your current spot
procedure spot(M,row,col)
	curPos := getYou(M,row,col)
	n:=curPos[1] 
	m:=curPos[2] 
	if M[n+1][m] == "." & M[n][m+1] == "." then {return 1}
	if M[n+1][m] == "." & M[n][m-1] == "." then {return 1}
	if M[n-1][m] == "." & M[n][m+1] == "." then {return 1}
	if M[n-1][m] == "." & M[n][m-1] == "." then {return 1}
	if M[n+1][m] == "." & M[n-1][m] == "." then {return 1}
	if M[n][m+1] == "." & M[n][m-1] == "." then {return 1}
	return 0
end

procedure youRandomMove(m,stack,row,col)
	
	check := checkUp(m,row,col)
	if check = 1 then { L:=getYou(m,row,col)
						s := spot(m,row,col)
						if s = 1 then {push(stack,L) }
						moveUp(m,"you",row,col) 
						fillWent(m,L)
					  }

	check := checkDown(m,row,col)
	if check = 1 then { L:=getYou(m,row,col)
						s := spot(m,row,col)
						if s = 1 then {push(stack,L) }
						moveDown(m,"you",row,col) 
						fillWent(m,L)
					  }

	check := checkLeft(m,row,col)
	if check = 1 then { L:=getYou(m,row,col)
						s := spot(m,row,col)
						if s = 1 then {push(stack,L) }
						moveLeft(m,"you",row,col) 
						fillWent(m,L)
					  }

	check := checkRight(m,row,col)
	if check = 1 then { L:=getYou(m,row,col)
						s := spot(m,row,col)
						if s = 1 then {push(stack,L) }
						moveRight(m,"you",row,col) 
						fillWent(m,L)
					  }
	
	repeat {
		n:= checkFence(m,row,col)
		if n = 0 then { break }
		else { backtrack(m,stack,row,col) }
	}
	
end

procedure chooseMode(w,h)
	GotoRC(1,13)
	WWrite("Controller in manual mode")
	GotoRC(2,13)
	WWrite("w : turn up")
	GotoRC(3,13)
	WWrite("s : turn down")
	GotoRC(4,13)
	WWrite("a : turn left")
	GotoRC(5,13)
	WWrite("d : turn right")	
	Font("sans,24")
	CenterString(w/2,h/2,"Type 'auto' to play auto mode")
	CenterString(w/2,h/2+40,"Type 'manual' to play manual mode")
	LeftString(w/2-40,h/2+70,">>>  ")
	GotoXY(w/2,h/2+80)	
	while  1=1 do{
		WinPlayMedia("soundtrack.mid")
		mode:=	WRead()
		if ((mode == "auto") | (mode == "manual")) then{
			break
		}
	Fg("white")
	FillRectangle(w/2-40,h/2+60,100,60)
	Fg("black")
	LeftString(w/2-130,h/2+70,"Try again >>>  ")
	GotoXY(w/2,h/2+80)
	}
	Font("sans,16")
	EraseArea(0,100,w-100,h-250)
	WDelay(300)
	return mode
end

procedure numberOfEscape(m,row,col)
	num:=0

	count:=1
	while count <= col do{
		if m[1][count] =="." then  { num:= num+1}
		count:=count+1
	}

	count:=1
	while count <=col  do{
		if m[row][count] == "." then {num:=num+1}
		count:=count+1
	}
	
	count:=1
	while count <= row do{
		if m[count][1] == "." then {num:=num+1}
		count:=count+1
	}
	
	count:=1
	while count <= row do{
		if m[count][col] == "." then {num:=num+1}
		count:=count+1
	}

	return num
		
end

procedure loading()
	w:=1024
	h:=640
	x:=200
	count:=1
	Font("sans,24")
	CenterString(w/2,250,"Loading....")	
	Fg("blue")
	while count <= 20 do{
		FillRectangle(x,200,40,40)
		x:=x+30
		count:=count+1
		WDelay(100)
	}
	Fg("black")
	EraseArea(0,100,w-100,h-250)
	WDelay(500)
	Font("sans,16")
end 

procedure main(file)
	w:= 1024
	h:=640

	ifile:=open(file[1],"r") | stop("cannot open file")
	row:=countRow(ifile)
	col:=countCol(ifile)

	myMap := initGame(ifile,row,col)
	
	WOpen("size=1024,640", "label=CS210 HW 5","image=bg.gif")

	intro(row,col)

	DrawLine(0,80,1000,80)


	mode:=chooseMode(w,h)

	loading()

	printMap(ifile,row,col)
	nEscape:=	numberOfEscape(myMap,row,col)
	escapePos :=	getEscapeLocation(myMap,row,col)
	getMonster(myMap,row,col)
	getYou(myMap,row,col)

	
	if mode=="manual" then{
	repeat {
		case Event() of{
			"w": moveUp(myMap,"you",row,col) 
			"s":moveDown(myMap,"you",row,col)
			"a": moveLeft(myMap,"you",row,col)
			"d":moveRight(myMap,"you",row,col)
		}
		WinPlayMedia("move.wav")
		checkFinish(myMap,row,col,escapePos,nEscape)
		monsterRandomMove(myMap,row,col)
		
	}
	}

	if mode =="auto" then{
	stack:=[]
	repeat{
		youRandomMove(myMap,stack,row,col)
		monsterRandomMove(myMap,row,col)
		checkFinish(myMap,row,col,escapePos,nEscape)
		WinPlayMedia("move.wav")
	}
	}
	
	WDone()
	
end
